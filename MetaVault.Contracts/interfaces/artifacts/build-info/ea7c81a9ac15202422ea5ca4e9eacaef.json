{
	"id": "ea7c81a9ac15202422ea5ca4e9eacaef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\n// SPDX-FileCopyrightText: 2024 Kiln <contact@kiln.fi>\n//\n// ██╗  ██╗██╗██╗     ███╗   ██╗\n// ██║ ██╔╝██║██║     ████╗  ██║\n// █████╔╝ ██║██║     ██╔██╗ ██║\n// ██╔═██╗ ██║██║     ██║╚██╗██║\n// ██║  ██╗██║███████╗██║ ╚████║\n// ╚═╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═══╝\n//\npragma solidity 0.8.22;\n\n/// @title ConnectorRegistry Interface.\n/// @author maximebrugel @ Kiln.\ninterface IConnectorRegistry {\n    /// @notice Get the address of a connector.\n    /// @param name The name of the connector.\n    function get(bytes32 name) external view returns (address);\n\n    /// @notice Get the address of a connector or revert if it is paused.\n    /// @param name The name of the connector.\n    /// @dev revert if the connector is paused.\n    function getOrRevert(bytes32 name) external view returns (address);\n\n    /// @notice Check if a connector exists.\n    /// @param name The name of the connector.\n    /// @return True if the connector exists, false if not.\n    function connectorExists(bytes32 name) external view returns (bool);\n\n    /// @notice Adds a connector to the registry.\n    /// @param name The name of the connector.\n    /// @param connector The address of the connector.\n    function add(bytes32 name, address connector) external;\n\n    /// @notice Updates a connector in the registry.\n    /// @param name The name of the connector.\n    /// @param connector The address of the connector.\n    /// @dev A connector can't be updated if it is frozen.\n    function update(bytes32 name, address connector) external;\n\n    /// @notice Removes a connector from the registry.\n    /// @param name The name of the connector.\n    /// @dev A connector can't be removed if it is frozen.\n    function remove(bytes32 name) external;\n\n    /// @notice Pauses a connector for an unspecified amount of time.\n    /// @param name The name of the connector.\n    function pause(bytes32 name) external;\n\n    /// @notice Pauses a connector for a specified amount of time.\n    /// @dev Cannot decrease the current pauseTimestamp of the connector.\n    /// @param name The name of the connector.\n    /// @param duration The duration until which the connector is paused.\n    function pauseFor(bytes32 name, uint256 duration) external;\n\n    /// @notice Unpauses a connector.\n    /// @param name The name of the connector.\n    function unPause(bytes32 name) external;\n\n    /// @notice Checks if a connector is paused.\n    /// @param name The name of the connector.\n    /// @return True if the connector is paused, false if not.\n    function paused(bytes32 name) external view returns (bool);\n\n    /// @notice Freezes a connector.\n    /// @param name The name of the connector.\n    /// @dev A connector can't be unfrozen.\n    function freeze(bytes32 name) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol": {
				"IConnectorRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "connector",
									"type": "address"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "connectorExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "freeze",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "get",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "getOrRevert",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "pauseFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "remove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								}
							],
							"name": "unPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "connector",
									"type": "address"
								}
							],
							"name": "update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "maximebrugel @ Kiln.",
						"kind": "dev",
						"methods": {
							"add(bytes32,address)": {
								"params": {
									"connector": "The address of the connector.",
									"name": "The name of the connector."
								}
							},
							"connectorExists(bytes32)": {
								"params": {
									"name": "The name of the connector."
								},
								"returns": {
									"_0": "True if the connector exists, false if not."
								}
							},
							"freeze(bytes32)": {
								"details": "A connector can't be unfrozen.",
								"params": {
									"name": "The name of the connector."
								}
							},
							"get(bytes32)": {
								"params": {
									"name": "The name of the connector."
								}
							},
							"getOrRevert(bytes32)": {
								"details": "revert if the connector is paused.",
								"params": {
									"name": "The name of the connector."
								}
							},
							"pause(bytes32)": {
								"params": {
									"name": "The name of the connector."
								}
							},
							"pauseFor(bytes32,uint256)": {
								"details": "Cannot decrease the current pauseTimestamp of the connector.",
								"params": {
									"duration": "The duration until which the connector is paused.",
									"name": "The name of the connector."
								}
							},
							"paused(bytes32)": {
								"params": {
									"name": "The name of the connector."
								},
								"returns": {
									"_0": "True if the connector is paused, false if not."
								}
							},
							"remove(bytes32)": {
								"details": "A connector can't be removed if it is frozen.",
								"params": {
									"name": "The name of the connector."
								}
							},
							"unPause(bytes32)": {
								"params": {
									"name": "The name of the connector."
								}
							},
							"update(bytes32,address)": {
								"details": "A connector can't be updated if it is frozen.",
								"params": {
									"connector": "The address of the connector.",
									"name": "The name of the connector."
								}
							}
						},
						"title": "ConnectorRegistry Interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"add(bytes32,address)": "61641bdc",
							"connectorExists(bytes32)": "da815abf",
							"freeze(bytes32)": "ec13cc7b",
							"get(bytes32)": "8eaa6ac0",
							"getOrRevert(bytes32)": "5fbfeb46",
							"pause(bytes32)": "ed56531a",
							"pauseFor(bytes32,uint256)": "708e2975",
							"paused(bytes32)": "9e9e4666",
							"remove(bytes32)": "95bc2673",
							"unPause(bytes32)": "8ac91be7",
							"update(bytes32,address)": "4ae2ffc0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"connector\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"connectorExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"getOrRevert\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"pauseFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"unPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"connector\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"maximebrugel @ Kiln.\",\"kind\":\"dev\",\"methods\":{\"add(bytes32,address)\":{\"params\":{\"connector\":\"The address of the connector.\",\"name\":\"The name of the connector.\"}},\"connectorExists(bytes32)\":{\"params\":{\"name\":\"The name of the connector.\"},\"returns\":{\"_0\":\"True if the connector exists, false if not.\"}},\"freeze(bytes32)\":{\"details\":\"A connector can't be unfrozen.\",\"params\":{\"name\":\"The name of the connector.\"}},\"get(bytes32)\":{\"params\":{\"name\":\"The name of the connector.\"}},\"getOrRevert(bytes32)\":{\"details\":\"revert if the connector is paused.\",\"params\":{\"name\":\"The name of the connector.\"}},\"pause(bytes32)\":{\"params\":{\"name\":\"The name of the connector.\"}},\"pauseFor(bytes32,uint256)\":{\"details\":\"Cannot decrease the current pauseTimestamp of the connector.\",\"params\":{\"duration\":\"The duration until which the connector is paused.\",\"name\":\"The name of the connector.\"}},\"paused(bytes32)\":{\"params\":{\"name\":\"The name of the connector.\"},\"returns\":{\"_0\":\"True if the connector is paused, false if not.\"}},\"remove(bytes32)\":{\"details\":\"A connector can't be removed if it is frozen.\",\"params\":{\"name\":\"The name of the connector.\"}},\"unPause(bytes32)\":{\"params\":{\"name\":\"The name of the connector.\"}},\"update(bytes32,address)\":{\"details\":\"A connector can't be updated if it is frozen.\",\"params\":{\"connector\":\"The address of the connector.\",\"name\":\"The name of the connector.\"}}},\"title\":\"ConnectorRegistry Interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"add(bytes32,address)\":{\"notice\":\"Adds a connector to the registry.\"},\"connectorExists(bytes32)\":{\"notice\":\"Check if a connector exists.\"},\"freeze(bytes32)\":{\"notice\":\"Freezes a connector.\"},\"get(bytes32)\":{\"notice\":\"Get the address of a connector.\"},\"getOrRevert(bytes32)\":{\"notice\":\"Get the address of a connector or revert if it is paused.\"},\"pause(bytes32)\":{\"notice\":\"Pauses a connector for an unspecified amount of time.\"},\"pauseFor(bytes32,uint256)\":{\"notice\":\"Pauses a connector for a specified amount of time.\"},\"paused(bytes32)\":{\"notice\":\"Checks if a connector is paused.\"},\"remove(bytes32)\":{\"notice\":\"Removes a connector from the registry.\"},\"unPause(bytes32)\":{\"notice\":\"Unpauses a connector.\"},\"update(bytes32,address)\":{\"notice\":\"Updates a connector in the registry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol\":\"IConnectorRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol\":{\"keccak256\":\"0x58cc9af1736329170cac8c39a5cbad5c37d2a766ae85e8d647bc4212f9b09b57\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://60fa3dbaebf1a78e49a1f6eb0f712b9825f49543b454a14c0819c4d9dfd26afb\",\"dweb:/ipfs/QmbnW6NmcUbsQ3RBRyUYmWsxnWykuXhCieozhUQC9VG1x3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"add(bytes32,address)": {
								"notice": "Adds a connector to the registry."
							},
							"connectorExists(bytes32)": {
								"notice": "Check if a connector exists."
							},
							"freeze(bytes32)": {
								"notice": "Freezes a connector."
							},
							"get(bytes32)": {
								"notice": "Get the address of a connector."
							},
							"getOrRevert(bytes32)": {
								"notice": "Get the address of a connector or revert if it is paused."
							},
							"pause(bytes32)": {
								"notice": "Pauses a connector for an unspecified amount of time."
							},
							"pauseFor(bytes32,uint256)": {
								"notice": "Pauses a connector for a specified amount of time."
							},
							"paused(bytes32)": {
								"notice": "Checks if a connector is paused."
							},
							"remove(bytes32)": {
								"notice": "Removes a connector from the registry."
							},
							"unPause(bytes32)": {
								"notice": "Unpauses a connector."
							},
							"update(bytes32,address)": {
								"notice": "Updates a connector in the registry."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol": {
				"ast": {
					"absolutePath": "MetaVault/src/MetaVault.Contracts/interfaces/IConnectorRegistry.sol",
					"exportedSymbols": {
						"IConnectorRegistry": [
							83
						]
					},
					"id": 84,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "568:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConnectorRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "593:73:0",
								"text": "@title ConnectorRegistry Interface.\n @author maximebrugel @ Kiln."
							},
							"fullyImplemented": false,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "IConnectorRegistry",
							"nameLocation": "676:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "701:90:0",
										"text": "@notice Get the address of a connector.\n @param name The name of the connector."
									},
									"functionSelector": "8eaa6ac0",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "805:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:14:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 83,
									"src": "796:59:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "861:164:0",
										"text": "@notice Get the address of a connector or revert if it is paused.\n @param name The name of the connector.\n @dev revert if the connector is paused."
									},
									"functionSelector": "5fbfeb46",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOrRevert",
									"nameLocation": "1039:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1059:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1051:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 12,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:14:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:9:0"
									},
									"scope": 83,
									"src": "1030:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1103:147:0",
										"text": "@notice Check if a connector exists.\n @param name The name of the connector.\n @return True if the connector exists, false if not."
									},
									"functionSelector": "da815abf",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "connectorExists",
									"nameLocation": "1264:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1280:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 20,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:14:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1317:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:6:0"
									},
									"scope": 83,
									"src": "1255:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1329:147:0",
										"text": "@notice Adds a connector to the registry.\n @param name The name of the connector.\n @param connector The address of the connector."
									},
									"functionSelector": "61641bdc",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1490:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1494:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 28,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "connector",
												"nameLocation": "1516:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1508:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:33:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1535:0:0"
									},
									"scope": 83,
									"src": "1481:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1542:209:0",
										"text": "@notice Updates a connector in the registry.\n @param name The name of the connector.\n @param connector The address of the connector.\n @dev A connector can't be updated if it is frozen."
									},
									"functionSelector": "4ae2ffc0",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "1765:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1772:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "connector",
												"nameLocation": "1794:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1786:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:33:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1813:0:0"
									},
									"scope": 83,
									"src": "1756:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1820:156:0",
										"text": "@notice Removes a connector from the registry.\n @param name The name of the connector.\n @dev A connector can't be removed if it is frozen."
									},
									"functionSelector": "95bc2673",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1997:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:14:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:0"
									},
									"scope": 83,
									"src": "1981:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "2026:112:0",
										"text": "@notice Pauses a connector for an unspecified amount of time.\n @param name The name of the connector."
									},
									"functionSelector": "ed56531a",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "2152:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2166:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2158:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:14:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:0:0"
									},
									"scope": 83,
									"src": "2143:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2187:257:0",
										"text": "@notice Pauses a connector for a specified amount of time.\n @dev Cannot decrease the current pauseTimestamp of the connector.\n @param name The name of the connector.\n @param duration The duration until which the connector is paused."
									},
									"functionSelector": "708e2975",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pauseFor",
									"nameLocation": "2458:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2475:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2467:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 56,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:32:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2507:0:0"
									},
									"scope": 83,
									"src": "2449:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2514:80:0",
										"text": "@notice Unpauses a connector.\n @param name The name of the connector."
									},
									"functionSelector": "8ac91be7",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unPause",
									"nameLocation": "2608:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2616:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:14:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:0:0"
									},
									"scope": 83,
									"src": "2599:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2645:154:0",
										"text": "@notice Checks if a connector is paused.\n @param name The name of the connector.\n @return True if the connector is paused, false if not."
									},
									"functionSelector": "9e9e4666",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2813:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 70,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:14:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2857:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:6:0"
									},
									"scope": 83,
									"src": "2804:59:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2869:123:0",
										"text": "@notice Freezes a connector.\n @param name The name of the connector.\n @dev A connector can't be unfrozen."
									},
									"functionSelector": "ec13cc7b",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "freeze",
									"nameLocation": "3006:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3021:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3013:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:14:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3035:0:0"
									},
									"scope": 83,
									"src": "2997:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 84,
							"src": "666:2372:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "568:2470:0"
				},
				"id": 0
			}
		}
	}
}