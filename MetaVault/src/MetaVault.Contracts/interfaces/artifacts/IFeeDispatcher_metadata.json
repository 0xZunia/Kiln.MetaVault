{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "underlyingDecimals",
						"type": "uint8"
					}
				],
				"name": "dispatchFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "feeRecipient",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "depositFeeSplit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rewardFeeSplit",
								"type": "uint256"
							}
						],
						"internalType": "struct IFeeDispatcher.FeeRecipient",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "feeRecipientAt",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "depositFeeSplit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rewardFeeSplit",
								"type": "uint256"
							}
						],
						"internalType": "struct IFeeDispatcher.FeeRecipient",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeRecipients",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "depositFeeSplit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rewardFeeSplit",
								"type": "uint256"
							}
						],
						"internalType": "struct IFeeDispatcher.FeeRecipient[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "incrementPendingDepositFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "incrementPendingRewardFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingDepositFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingRewardFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "depositFeeSplit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rewardFeeSplit",
								"type": "uint256"
							}
						],
						"internalType": "struct IFeeDispatcher.FeeRecipient[]",
						"name": "recipients",
						"type": "tuple[]"
					},
					{
						"internalType": "uint8",
						"name": "underlyingDecimal",
						"type": "uint8"
					}
				],
				"name": "setFeeRecipients",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "maximebrugel @ Kiln.",
			"kind": "dev",
			"methods": {
				"feeRecipient(address)": {
					"params": {
						"recipient": "The address of the fee recipient."
					},
					"returns": {
						"_0": "The fee recipient."
					}
				},
				"feeRecipientAt(uint256)": {
					"params": {
						"index": "The index of the fee recipient."
					},
					"returns": {
						"_0": "The fee recipient."
					}
				},
				"feeRecipients()": {
					"returns": {
						"_0": "The fee recipients."
					}
				},
				"incrementPendingDepositFee(uint256)": {
					"params": {
						"amount": "The amount to increment the pending deposit fee by."
					}
				},
				"incrementPendingRewardFee(uint256)": {
					"params": {
						"amount": "The amount to increment the pending reward fee by."
					}
				},
				"pendingDepositFee()": {
					"returns": {
						"_0": "The pending deposit fee."
					}
				},
				"pendingRewardFee()": {
					"returns": {
						"_0": "The pending reward fee."
					}
				},
				"setFeeRecipients((address,uint256,uint256)[],uint8)": {
					"params": {
						"recipients": "The new fee recipients.",
						"underlyingDecimal": "The number of decimals of the underlying asset."
					}
				}
			},
			"title": "FeeDispatcher Interface.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"dispatchFees(address,uint8)": {
					"notice": "Dispatch pending fees to the fee recipients."
				},
				"feeRecipient(address)": {
					"notice": "Get the fee recipient of a given address."
				},
				"feeRecipientAt(uint256)": {
					"notice": "Get the fee recipient at a given index."
				},
				"feeRecipients()": {
					"notice": "Get the fee recipients."
				},
				"incrementPendingDepositFee(uint256)": {
					"notice": "Increment the pending deposit fee."
				},
				"incrementPendingRewardFee(uint256)": {
					"notice": "Increment the pending reward fee."
				},
				"pendingDepositFee()": {
					"notice": "Get the pending deposit fee."
				},
				"pendingRewardFee()": {
					"notice": "Get the pending reward fee."
				},
				"setFeeRecipients((address,uint256,uint256)[],uint8)": {
					"notice": "Set the fee recipients.      The fee recipients must be unique and the total fee splits must be 100e18 (representing 100%)."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MetaVault/src/MetaVault.Contracts/interfaces/IFeeDispatcher.sol": "IFeeDispatcher"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"MetaVault/src/MetaVault.Contracts/interfaces/IFeeDispatcher.sol": {
			"keccak256": "0x1ea014219c1c9820068946bb97450d4fbf4ef36e405511152e7230677cd5806a",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://dd594a52b2ed2a07c440b3e97a765c4f600e204a0caad286ab43085e8d70ce9f",
				"dweb:/ipfs/Qme76ZWjekdbt9f1kTEyYugu4buLPDBCj9HicvKHUReAmN"
			]
		}
	},
	"version": 1
}